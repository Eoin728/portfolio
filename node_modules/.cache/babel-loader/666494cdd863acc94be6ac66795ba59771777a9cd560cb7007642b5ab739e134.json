{"ast":null,"code":"var _excluded = [\"children\", \"defaultValue\", \"value\", \"disabled\", \"focusIndicator\", \"gap\", \"labelKey\", \"valueKey\", \"onChange\", \"options\", \"name\"],\n  _excluded2 = [\"value\"];\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.indexOf(n) >= 0) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nimport React, { forwardRef, useContext } from 'react';\nimport { CheckBox } from '../CheckBox';\nimport { FormContext } from '../Form/FormContext';\nimport { StyledCheckBoxGroup } from './StyledCheckBoxGroup';\nimport { CheckBoxGroupPropTypes } from './propTypes';\nimport { useThemeValue } from '../../utils/useThemeValue';\nvar CheckBoxGroup = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    defaultValue = _ref.defaultValue,\n    valueProp = _ref.value,\n    disabledProp = _ref.disabled,\n    _ref$focusIndicator = _ref.focusIndicator,\n    focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator,\n    gap = _ref.gap,\n    labelKey = _ref.labelKey,\n    valueKey = _ref.valueKey,\n    onChange = _ref.onChange,\n    optionsProp = _ref.options,\n    name = _ref.name,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var formContext = useContext(FormContext);\n  var theme = useThemeValue();\n\n  // In case option is a string, normalize it to be an object\n  var options = optionsProp.map(function (option) {\n    return typeof option === 'string' ? {\n      disabled: disabledProp,\n      value: option,\n      label: option\n    } : option;\n  });\n\n  // 'value' is an array of checked valueKeys\n  var _formContext$useFormI = formContext.useFormInput({\n      name: name,\n      value: valueProp,\n      initialValue: defaultValue || []\n    }),\n    value = _formContext$useFormI[0],\n    setValue = _formContext$useFormI[1];\n\n  // Logic is necessary to maintain a proper data structure for Form logic\n  var onCheckBoxChange = function onCheckBoxChange(event, optionValue, option) {\n    // deep copy of value\n    var nextValue = JSON.parse(JSON.stringify(value)) || [];\n    var optionIndex = nextValue.indexOf(optionValue);\n    // If the value option isn't in the array, add it.\n    // Otherwise, remove it.\n    if (optionIndex < 0) nextValue.push(optionValue);else nextValue.splice(optionIndex, 1);\n    setValue(nextValue);\n    // Similar functionality to Select onChange()\n    if (onChange) {\n      event.persist(); // extract from React synthetic event pool\n      var adjustedEvent = event;\n      adjustedEvent.value = nextValue;\n      adjustedEvent.option = option;\n      onChange(adjustedEvent);\n    }\n  };\n  return /*#__PURE__*/React.createElement(StyledCheckBoxGroup, _extends({\n    ref: ref,\n    role: \"group\"\n  }, theme.checkBoxGroup.container, {\n    gap: gap || (theme.checkBoxGroup.container && theme.checkBoxGroup.container.gap ? theme.checkBoxGroup.container.gap : 'small') // consistent with RadioButtonGroup default\n  }, rest), options.map(function (option, index) {\n    var optionValue = option.value;\n    var label = labelKey ? option[labelKey] : option.label;\n    var valueOption = valueKey ? option[valueKey] : optionValue;\n    var checked = value.indexOf(valueOption) >= 0;\n    var disabled = disabledProp || option.disabled;\n    var key = label + \"-\" + valueOption;\n    if (option.checked) console.warn(\n    // eslint-disable-next-line max-len\n    \"'checked' prop of an individual CheckBox shouldn't be used in a CheckBoxGroup component. Use the CheckBoxGroup 'value' prop instead.\");\n    // value shouldn't propagate the input field and the onChange option\n    var omit = option.value,\n      optionRest = _objectWithoutPropertiesLoose(option, _excluded2);\n    var optionProps = _extends({}, optionRest, {\n      label: label,\n      disabled: disabled\n    });\n    return /*#__PURE__*/React.createElement(CheckBox, _extends({\n      key: key\n    }, optionProps, {\n      disabled: disabled,\n      checked: checked\n      // when contained in a FormField, focusIndicator = false,\n      // so that the FormField has focus style. However, we still\n      // need to visually indicate when a CheckBox is active.\n      // In CheckBox, if focus = true but focusIndicator = false,\n      // we will apply the hover treament.\n      ,\n\n      focusIndicator: focusIndicator,\n      label: label,\n      onChange: function onChange(event) {\n        return onCheckBoxChange(event, valueOption, optionProps);\n      }\n    }), children ? function (state) {\n      return children(options[index], state);\n    } : null);\n  }));\n});\nCheckBoxGroup.displayName = 'CheckBoxGroup';\nCheckBoxGroup.propTypes = CheckBoxGroupPropTypes;\nexport { CheckBoxGroup };","map":{"version":3,"names":["_excluded","_excluded2","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","indexOf","React","forwardRef","useContext","CheckBox","FormContext","StyledCheckBoxGroup","CheckBoxGroupPropTypes","useThemeValue","CheckBoxGroup","_ref","ref","children","defaultValue","valueProp","value","disabledProp","disabled","_ref$focusIndicator","focusIndicator","gap","labelKey","valueKey","onChange","optionsProp","options","name","rest","formContext","theme","map","option","label","_formContext$useFormI","useFormInput","initialValue","setValue","onCheckBoxChange","event","optionValue","nextValue","JSON","parse","stringify","optionIndex","push","splice","persist","adjustedEvent","createElement","role","checkBoxGroup","container","index","valueOption","checked","key","console","warn","omit","optionRest","optionProps","state","displayName","propTypes"],"sources":["/home/uranus/portfolio/node_modules/grommet/es6/components/CheckBoxGroup/CheckBoxGroup.js"],"sourcesContent":["var _excluded = [\"children\", \"defaultValue\", \"value\", \"disabled\", \"focusIndicator\", \"gap\", \"labelKey\", \"valueKey\", \"onChange\", \"options\", \"name\"],\n  _excluded2 = [\"value\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport React, { forwardRef, useContext } from 'react';\nimport { CheckBox } from '../CheckBox';\nimport { FormContext } from '../Form/FormContext';\nimport { StyledCheckBoxGroup } from './StyledCheckBoxGroup';\nimport { CheckBoxGroupPropTypes } from './propTypes';\nimport { useThemeValue } from '../../utils/useThemeValue';\nvar CheckBoxGroup = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    defaultValue = _ref.defaultValue,\n    valueProp = _ref.value,\n    disabledProp = _ref.disabled,\n    _ref$focusIndicator = _ref.focusIndicator,\n    focusIndicator = _ref$focusIndicator === void 0 ? true : _ref$focusIndicator,\n    gap = _ref.gap,\n    labelKey = _ref.labelKey,\n    valueKey = _ref.valueKey,\n    onChange = _ref.onChange,\n    optionsProp = _ref.options,\n    name = _ref.name,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var formContext = useContext(FormContext);\n  var theme = useThemeValue();\n\n  // In case option is a string, normalize it to be an object\n  var options = optionsProp.map(function (option) {\n    return typeof option === 'string' ? {\n      disabled: disabledProp,\n      value: option,\n      label: option\n    } : option;\n  });\n\n  // 'value' is an array of checked valueKeys\n  var _formContext$useFormI = formContext.useFormInput({\n      name: name,\n      value: valueProp,\n      initialValue: defaultValue || []\n    }),\n    value = _formContext$useFormI[0],\n    setValue = _formContext$useFormI[1];\n\n  // Logic is necessary to maintain a proper data structure for Form logic\n  var onCheckBoxChange = function onCheckBoxChange(event, optionValue, option) {\n    // deep copy of value\n    var nextValue = JSON.parse(JSON.stringify(value)) || [];\n    var optionIndex = nextValue.indexOf(optionValue);\n    // If the value option isn't in the array, add it.\n    // Otherwise, remove it.\n    if (optionIndex < 0) nextValue.push(optionValue);else nextValue.splice(optionIndex, 1);\n    setValue(nextValue);\n    // Similar functionality to Select onChange()\n    if (onChange) {\n      event.persist(); // extract from React synthetic event pool\n      var adjustedEvent = event;\n      adjustedEvent.value = nextValue;\n      adjustedEvent.option = option;\n      onChange(adjustedEvent);\n    }\n  };\n  return /*#__PURE__*/React.createElement(StyledCheckBoxGroup, _extends({\n    ref: ref,\n    role: \"group\"\n  }, theme.checkBoxGroup.container, {\n    gap: gap || (theme.checkBoxGroup.container && theme.checkBoxGroup.container.gap ? theme.checkBoxGroup.container.gap : 'small') // consistent with RadioButtonGroup default\n  }, rest), options.map(function (option, index) {\n    var optionValue = option.value;\n    var label = labelKey ? option[labelKey] : option.label;\n    var valueOption = valueKey ? option[valueKey] : optionValue;\n    var checked = value.indexOf(valueOption) >= 0;\n    var disabled = disabledProp || option.disabled;\n    var key = label + \"-\" + valueOption;\n    if (option.checked) console.warn( // eslint-disable-next-line max-len\n    \"'checked' prop of an individual CheckBox shouldn't be used in a CheckBoxGroup component. Use the CheckBoxGroup 'value' prop instead.\");\n    // value shouldn't propagate the input field and the onChange option\n    var omit = option.value,\n      optionRest = _objectWithoutPropertiesLoose(option, _excluded2);\n    var optionProps = _extends({}, optionRest, {\n      label: label,\n      disabled: disabled\n    });\n    return /*#__PURE__*/React.createElement(CheckBox, _extends({\n      key: key\n    }, optionProps, {\n      disabled: disabled,\n      checked: checked\n      // when contained in a FormField, focusIndicator = false,\n      // so that the FormField has focus style. However, we still\n      // need to visually indicate when a CheckBox is active.\n      // In CheckBox, if focus = true but focusIndicator = false,\n      // we will apply the hover treament.\n      ,\n      focusIndicator: focusIndicator,\n      label: label,\n      onChange: function onChange(event) {\n        return onCheckBoxChange(event, valueOption, optionProps);\n      }\n    }), children ? function (state) {\n      return children(options[index], state);\n    } : null);\n  }));\n});\nCheckBoxGroup.displayName = 'CheckBoxGroup';\nCheckBoxGroup.propTypes = CheckBoxGroupPropTypes;\nexport { CheckBoxGroup };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}