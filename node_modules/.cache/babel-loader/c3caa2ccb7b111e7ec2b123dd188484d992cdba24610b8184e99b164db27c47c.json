{"ast":null,"code":"var _excluded = [\"a11yTitle\", \"axis\", \"bounds\", \"chart\", \"data\", \"detail\", \"direction\", \"gap\", \"guide\", \"legend\", \"offset\", \"placeholder\", \"pad\", \"series\", \"size\"],\n  _excluded2 = [\"property\"],\n  _excluded3 = [\"property\", \"type\", \"x\", \"y\"],\n  _excluded4 = [\"property\"];\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.indexOf(n) >= 0) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nimport React, { forwardRef, useMemo, useState } from 'react';\nimport { Box } from '../Box';\nimport { Chart, calcs, calcBounds } from '../Chart';\nimport { Grid } from '../Grid';\nimport { Stack } from '../Stack';\nimport { Text } from '../Text';\nimport { parseMetricToNum } from '../../utils';\nimport { Detail } from './Detail';\nimport { Legend } from './Legend';\nimport { XAxis } from './XAxis';\nimport { YAxis } from './YAxis';\nimport { XGuide } from './XGuide';\nimport { YGuide } from './YGuide';\nimport { createDateFormat, halfPad, heightYGranularity, largestSize, maximum, minimum, points } from './utils';\nimport { DataChartPropTypes } from './propTypes';\nimport { useThemeValue } from '../../utils/useThemeValue';\nvar stackedChartType = {\n  areas: 'area',\n  bars: 'bar',\n  lines: 'line'\n};\n\n// DataChart takes a generic data array of objects plus as few properties\n// as possible, and creates a Stack of Charts with x and y axes, a legend,\n// and interactive detail.\n// Much of the code here-in involves the \"few properties\" aspect where we\n// normalize and automatically handle whatever the caller didn't specify.\n\nvar DataChart = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _boundsProp$x, _boundsProp$y;\n  var a11yTitle = _ref.a11yTitle,\n    _ref$axis = _ref.axis,\n    axisProp = _ref$axis === void 0 ? true : _ref$axis,\n    _ref$bounds = _ref.bounds,\n    boundsProp = _ref$bounds === void 0 ? 'align' : _ref$bounds,\n    chartProp = _ref.chart,\n    _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data,\n    detail = _ref.detail,\n    _ref$direction = _ref.direction,\n    direction = _ref$direction === void 0 ? 'vertical' : _ref$direction,\n    _ref$gap = _ref.gap,\n    gap = _ref$gap === void 0 ? 'small' : _ref$gap,\n    guideProp = _ref.guide,\n    legend = _ref.legend,\n    offset = _ref.offset,\n    placeholder = _ref.placeholder,\n    padProp = _ref.pad,\n    seriesProp = _ref.series,\n    size = _ref.size,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var theme = useThemeValue();\n\n  // legend interaction, if any\n  var _useState = useState(),\n    activeProperty = _useState[0],\n    setActiveProperty = _useState[1];\n  var horizontal = useMemo(function () {\n    return direction === 'horizontal';\n  }, [direction]);\n\n  // normalize seriesProp to an array of objects, one per property\n  var series = useMemo(function () {\n    if (Array.isArray(seriesProp)) return seriesProp.filter(function (s) {\n      return s.property || typeof s === 'string';\n    }).map(function (s) {\n      return typeof s === 'string' ? {\n        property: s\n      } : s;\n    });\n    if (typeof seriesProp === 'string') return [{\n      property: seriesProp\n    }];\n    if (seriesProp) return [seriesProp];\n    return [];\n  }, [seriesProp]);\n  var getPropertySeries = function getPropertySeries(prop) {\n    return series.find(function (_ref2) {\n      var property = _ref2.property;\n      return prop === property;\n    });\n  };\n\n  // Normalize chartProp to an array of objects.\n  // Each chart has one or more properties associated with it.\n  // A stacked bar or area chart has an array of properties.\n  // A point chart can have x, y, thickness, and color each driven\n  // by a separate property.\n  var charts = useMemo(function () {\n    if (!chartProp) {\n      if (series.length === 1) return series.filter(function (s) {\n        return s.property;\n      }).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n      // if we have more than one property, we'll use the first for\n      // the x-axis and we'll plot the rest\n      return series.slice(1).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n    }\n    if (Array.isArray(chartProp)) return chartProp.map(function (c) {\n      return typeof c === 'string' ? {\n        property: c\n      } : c;\n    }).filter(function (_ref3) {\n      var property = _ref3.property;\n      return property;\n    });\n    if (typeof chartProp === 'string') return [{\n      property: chartProp\n    }];\n    if (chartProp) return [chartProp];\n    return [];\n  }, [chartProp, series]);\n\n  // map the series property values into their own arrays\n  var seriesValues = useMemo(function () {\n    var result = {};\n    series.forEach(function (_ref4) {\n      var property = _ref4.property;\n      result[property] = data.map(function (d) {\n        return d[property];\n      });\n    });\n    return result;\n  }, [data, series]);\n\n  // Setup the values property for each chart.\n  // The index into 'charts' can be used to index into 'chartValues'.\n  var chartValues = useMemo(function () {\n    return charts.map(function (_ref5) {\n      var opacity = _ref5.opacity,\n        property = _ref5.property,\n        type = _ref5.type;\n      if (property) {\n        if (Array.isArray(property)) {\n          // A range chart or a stacked bar or area chart has multiple\n          // properties.\n          // In this case, this returns an array of values,\n          // one per property.\n          if (stackedChartType[type]) {\n            // Further down, where we render, each property is rendered\n            // using a separate Chart component and the values are stacked\n            // such that they line up appropriately.\n            var totals = [];\n            return property.map(function (cp) {\n              // handle object or string\n              var aProperty = cp.property || cp;\n              var values = seriesValues[aProperty];\n              if (!values) return undefined; // property name isn't valid\n              return values.map(function (v, i) {\n                var base = totals[i] || 0;\n                totals[i] = base + v;\n                if (type === 'lines') return [i, base + v];\n                return [i, base, base + v];\n              });\n            });\n          }\n          return data.map(function (_, index) {\n            return [index].concat(property.map(function (p) {\n              return seriesValues[p] ? seriesValues[p][index] : data[index][p];\n            }));\n          });\n        }\n        if (typeof property === 'object') {\n          // When 'property' is an array, the keys of this array indicate\n          // which property drives which part of the rendered Chart.\n          var color = property.color,\n            thickness = property.thickness,\n            x = property.x,\n            y = property.y,\n            y2 = property.y2;\n          return seriesValues[x].map(function (value, index) {\n            var aValue = {\n              value: [value]\n            };\n            aValue.value.push(seriesValues[y][index]);\n            if (y2) aValue.value.push(seriesValues[y2][index]);\n            if (thickness) {\n              var t = seriesValues[thickness.property || thickness][index];\n              aValue.thickness = thickness.transform ? thickness.transform(t) : t;\n            }\n            if (color) {\n              var c = seriesValues[color.property || color][index];\n              aValue.color = color.transform ? color.transform(c) : c;\n            }\n            if (opacity) aValue.opacity = opacity;\n            return aValue;\n          });\n        }\n        return seriesValues[property];\n      }\n      return undefined;\n    });\n  }, [charts, data, seriesValues]);\n\n  // map granularities to work well with the number of data points we have\n  var granularities = useMemo(function () {\n    var medium;\n    // determine a good medium granularity that will align well with the\n    // length of the data\n    var steps = data.length - 1;\n    // special case property driven point charts\n    if (charts[0] && typeof charts[0].property === 'object') medium = 3;else if (steps < 4) medium = data.length;else if (steps === 4) medium = 3;else if (steps % 4 === 0) medium = 5;else if (steps % 3 === 0) medium = 4;else if (steps % 2 === 0) medium = 3;else medium = 2;\n    var granularity0 = {\n      coarse: Math.min(data.length, 2),\n      fine: data.length,\n      medium: medium\n    };\n    var granularity1 = _extends({}, heightYGranularity[size && size.height || 'small'] || {\n      fine: 5,\n      medium: 3\n    }, {\n      coarse: 2\n    });\n    return horizontal ? {\n      x: granularity1,\n      y: granularity0\n    } : {\n      x: granularity0,\n      y: granularity1\n    };\n  }, [charts, data.length, horizontal, size]);\n\n  // normalize axis to objects, convert granularity to a number\n  var axis = useMemo(function () {\n    if (!axisProp) return undefined;\n    var result = {};\n    if (axisProp === true || axisProp.x === true) result.x = {};\n    if (axisProp === true || axisProp.y === true) result.y = {};\n    if (!result.x && axisProp.x) result.x = typeof axisProp.x === 'string' ? {\n      property: axisProp.x\n    } : _extends({}, axisProp.x);\n    if (!result.y && axisProp.y) result.y = typeof axisProp.y === 'string' ? {\n      property: axisProp.y\n    } : _extends({}, axisProp.y);\n    if (result.x) {\n      if (!result.x.property) {\n        // see if we have a point chart that has an x property\n        if (horizontal) {\n          if (charts[0]) result.x.property = charts[0].property.x || charts[0].property;\n        } else if (data && data[0]) {\n          if (data[0].date) result.x.property = 'date';else if (data[0].time) result.x.property = 'time';\n        }\n      }\n      if (!result.x.granularity) result.x.granularity = 'coarse';\n    }\n    if (result.y) {\n      if (!result.y.property) {\n        // see if we have a point chart that has an y property\n        if (horizontal) {\n          if (data && data[0]) {\n            if (data[0].date) result.y.property = 'date';else if (data[0].time) result.y.property = 'time';\n          }\n        } else if (charts[0]) result.y.property = charts[0].property.y || charts[0].property;\n      }\n      if (!result.y.granularity) result.y.granularity = 'coarse';\n    }\n\n    // calculate number of entries based on granularity\n    if (result.x) {\n      var _result$x$granularity = result.x.granularity,\n        granularity = _result$x$granularity === void 0 ? 'coarse' : _result$x$granularity;\n      result.x.count = granularities.x[granularity];\n    }\n    if (result.y) {\n      var _result$y$granularity = result.y.granularity,\n        _granularity = _result$y$granularity === void 0 ? 'coarse' : _result$y$granularity;\n      result.y.count = granularities.y[_granularity];\n    }\n    return result;\n  }, [axisProp, data, charts, granularities, horizontal]);\n\n  // calculate axis, bounds, and thickness for each chart\n  var chartProps = useMemo(function () {\n    var steps = {};\n    var coarseness = horizontal ? [5, undefined] : [undefined, 5];\n    if (axis && axis.x) {\n      var _axis$x$granularity = axis.x.granularity,\n        granularity = _axis$x$granularity === void 0 ? 'coarse' : _axis$x$granularity;\n      steps.x = granularities.x[granularity] - 1;\n    } else steps.x = horizontal ? 1 : data.length - 1;\n    if (axis && axis.y) {\n      var _axis$y$granularity = axis.y.granularity,\n        _granularity2 = _axis$y$granularity === void 0 ? 'coarse' : _axis$y$granularity;\n      steps.y = granularities.y[_granularity2] - 1;\n    } else steps.y = horizontal ? data.length - 1 : 1;\n    var chartBounds = chartValues.map(function (_, index) {\n      var type = charts[index].type;\n      if (stackedChartType[type]) {\n        var _chartValues$index;\n        // merge values for bars, areas, and lines cases\n        var mergedValues = ((_chartValues$index = chartValues[index]) == null || (_chartValues$index = _chartValues$index[0]) == null ? void 0 : _chartValues$index.slice(0)) || [];\n        chartValues[index].slice(1) // skip first index as that is the x value\n        .filter(function (values) {\n          return values;\n        }) // property name isn't valid\n        .forEach(function (values) {\n          mergedValues = mergedValues.map(function (__, i) {\n            return type === 'lines' ? [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][1], values[i][1])] : [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][2], values[i][2])];\n          });\n        });\n        return calcBounds(mergedValues, {\n          coarseness: coarseness,\n          direction: direction,\n          steps: steps\n        });\n      }\n      // if this is a data driven x chart, set coarseness for x\n      return calcBounds(chartValues[index], {\n        coarseness: charts[index].property.x ? {\n          x: 5,\n          y: 5\n        } : coarseness,\n        direction: direction,\n        steps: steps\n      });\n    });\n    if (boundsProp === 'align' && chartBounds.length) {\n      var alignedBounds = {\n        x: {},\n        y: {}\n      };\n      chartBounds.forEach(function (bounds) {\n        alignedBounds.x.min = minimum(alignedBounds.x.min, bounds.x.min);\n        alignedBounds.x.max = maximum(alignedBounds.x.max, bounds.x.max);\n        alignedBounds.y.min = minimum(alignedBounds.y.min, bounds.y.min);\n        alignedBounds.y.max = maximum(alignedBounds.y.max, bounds.y.max);\n      });\n      chartBounds = chartBounds.map(function () {\n        return alignedBounds;\n      });\n    }\n    return chartValues.map(function (values, index) {\n      var _charts$index = charts[index],\n        thickness = _charts$index.thickness,\n        type = _charts$index.type;\n      var calcValues = stackedChartType[type] ? values[0] : values;\n      return calcs(calcValues, {\n        bounds: chartBounds[index],\n        direction: direction,\n        steps: steps,\n        thickness: thickness\n      });\n    });\n  }, [axis, boundsProp, charts, chartValues, data, direction, granularities, horizontal]);\n\n  // normalize how we style data properties for use by Legend and Detail\n  var seriesStyles = useMemo(function () {\n    var result = {};\n    // start from what we were explicitly given\n    charts.forEach(function (chart, index) {\n      var calcThickness = chartProps[index].thickness;\n      if (typeof chart.property === 'object' && !Array.isArray(chart.property)) {\n        // data driven point chart\n        Object.keys(chart.property).forEach(function (aspect) {\n          var prop = chart.property[aspect];\n          if (!result[prop.property || prop]) result[prop.property || prop] = {\n            aspect: aspect\n          };\n        });\n      } else {\n        var setPropertyStyle = function setPropertyStyle(_ref6) {\n          var property = _ref6.property,\n            styles = _objectWithoutPropertiesLoose(_ref6, _excluded2);\n          // keep what we've got, use what is new\n          result[property] = _extends({}, styles, result[property] || {});\n          // unless the new style is has no opacity\n          if (!styles.opacity) delete result[property].opacity;\n          if (styles.type === 'point') result[property].point = false;\n          if (calcThickness && !result[property].thickness) result[property].thickness = calcThickness;\n        };\n        if (Array.isArray(chart.property)) chart.property.forEach(function (prop) {\n          if (typeof prop === 'string') setPropertyStyle(_extends({}, chart, {\n            property: prop\n          }));else if (typeof prop === 'object') setPropertyStyle(_extends({}, chart, prop));\n        });else if (typeof chart === 'object') setPropertyStyle(chart);else if (typeof chart === 'string') setPropertyStyle({\n          property: chart\n        });\n      }\n    });\n\n    // set color for any non-aspect properties we don't have one for yet\n    var colorIndex = 0;\n    var pointIndex = 0;\n    Object.keys(result).forEach(function (key) {\n      var seriesStyle = result[key];\n      if (!seriesStyle.aspect && !seriesStyle.color) {\n        seriesStyle.color = \"graph-\" + colorIndex;\n        colorIndex += 1;\n      }\n      // set opacity if it isn't set and this isn't the active property\n      if (activeProperty !== undefined && activeProperty !== key) {\n        seriesStyle.opacity = 'medium';\n      }\n      if (seriesStyle.point === false) {\n        seriesStyle.point = points[pointIndex];\n        pointIndex += 1;\n      }\n    });\n    return result;\n  }, [activeProperty, charts, chartProps]);\n\n  // normalize guide\n  var guide = useMemo(function () {\n    if (!guideProp) return undefined;\n    var result;\n    if (guideProp === true) {\n      result = {\n        x: {},\n        y: {}\n      };\n    } else {\n      result = {};\n      if (guideProp.x) result.x = _extends({}, guideProp.x);\n      if (guideProp.y) result.y = _extends({}, guideProp.y);\n    }\n    // set counts\n    if (result.x) {\n      // if no granularity and axis, align count with axis\n      if (!result.x.granularity && axis && axis.x) result.x.count = axis.x.count;\n      if (!result.x.count) result.x.count = granularities.x[result.x.granularity || 'coarse'];\n    }\n    if (result.y) {\n      // if no granularity and axis, align count with axis\n      if (!result.y.granularity && axis && axis.y) result.y.count = axis.y.count;\n      if (!result.y.count) result.y.count = granularities.y[result.y.granularity || 'coarse'];\n    }\n    return result;\n  }, [axis, granularities, guideProp]);\n\n  // set the pad to half the thickness, based on the chart types\n  // except when using offset, then add even more horizontal pad\n  var pad = useMemo(function () {\n    if (padProp !== undefined) return padProp;\n    var pad0;\n    var pad1;\n    charts.forEach(function (_ref7, index) {\n      var type = _ref7.type;\n      var thickness = chartProps[index].thickness;\n      pad0 = largestSize(pad0, halfPad[thickness]);\n      if (type && type !== 'bar') pad1 = largestSize(pad1, halfPad[thickness]);\n    });\n    return horizontal ? {\n      horizontal: pad1,\n      vertical: pad0\n    } : {\n      horizontal: pad0,\n      vertical: pad1\n    };\n  }, [chartProps, charts, horizontal, padProp]);\n\n  // calculate the thickness in pixels of each chart\n  var thicknesses = useMemo(function () {\n    return offset ? charts.map(function (_, index) {\n      var thickness = chartProps[index].thickness;\n      return parseMetricToNum(theme.global.edgeSize[thickness] || thickness);\n    }) : undefined;\n  }, [charts, chartProps, offset, theme]);\n\n  // normalize any offset gap\n  var offsetGap = useMemo(function () {\n    return (offset == null ? void 0 : offset.gap) && parseMetricToNum(theme.global.edgeSize[offset.gap] || offset.gap) || 0;\n  }, [offset, theme]);\n\n  // calculate the offset for each chart, which is a sum of the thicknesses\n  // any offset gaps that preceded it\n  var offsets = useMemo(function () {\n    if (offset) {\n      return thicknesses.map(function (t, i) {\n        return thicknesses.slice(0, i).reduce(function (a, b) {\n          return a + b + offsetGap;\n        }, 0);\n      });\n    }\n    return undefined;\n  }, [offset, offsetGap, thicknesses]);\n\n  // Calculate the total pad we should add to the end of each chart.\n  // We do this to shrink the width of each chart so we can shift them\n  // via `translate` and have them take up the right amount of width.\n  var offsetPad = useMemo(function () {\n    return offsets ? offsets[offsets.length - 1] + thicknesses[thicknesses.length - 1] + \"px\" : undefined;\n  }, [offsets, thicknesses]);\n\n  // The thickness of the segments. We need to convert to numbers\n  // to be able to compare across charts where some might be using T-shirt\n  // labels and others might be pixel values.\n  var segmentThickness = useMemo(function () {\n    var result = 0;\n    charts.forEach(function (_, index) {\n      var thickness = chartProps[index].thickness;\n      result = Math.max(result, parseMetricToNum(theme.global.edgeSize[thickness] || thickness));\n    });\n    return result + \"px\";\n  }, [charts, chartProps, theme]);\n  var dateFormats = useMemo(function () {\n    var result = {};\n    var full = axis && axis.x && axis.x.granularity === 'coarse';\n    series.forEach(function (_ref8) {\n      var property = _ref8.property,\n        render = _ref8.render;\n      if (!render && data.length > 1 && typeof data[0][property] === 'string') {\n        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);\n      }\n    });\n    return result;\n  }, [axis, data, series]);\n  var renderValue = function renderValue(serie, axisValue, y) {\n    if (serie === void 0) {\n      serie = {};\n    }\n    var _serie = serie,\n      prefix = _serie.prefix,\n      property = _serie.property,\n      render = _serie.render,\n      suffix = _serie.suffix;\n    var value = axisValue;\n    if (value !== undefined) {\n      if (!property || !horizontal && y || horizontal && !y) {\n        if (render) return render(value);\n      } else {\n        var datum = data[axisValue];\n        value = datum[property];\n        if (render) return render(value, datum, property);\n      }\n      if (property) {\n        var dateFormat = dateFormats[property];\n        if (dateFormat) return dateFormat(new Date(value));\n        if (prefix) value = \"\" + prefix + value;\n        if (suffix) value = \"\" + value + suffix;\n      }\n    }\n    return value;\n  };\n\n  // TODO: revisit how x/y axis are hooked up to charts and series\n\n  var xAxisElement = axis && axis.x && (chartProps.length || boundsProp != null && boundsProp.x) ? /*#__PURE__*/React.createElement(XAxis, {\n    axis: axis,\n    values: (boundsProp == null || (_boundsProp$x = boundsProp.x) == null ? void 0 : _boundsProp$x.slice(0)) || (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis.x,\n    pad: !horizontal && offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad,\n    renderValue: renderValue,\n    serie: axis.x.property && getPropertySeries(axis.x.property),\n    style: offsetPad ? {\n      transform: \"translate(\" + offsets[Math.floor(offsets.length / 2)] + \"px, 0px)\"\n    } : {},\n    thickness: horizontal ? undefined : segmentThickness,\n    theme: theme\n  }) : null;\n  var yAxisElement = axis && axis.y && (chartProps.length || boundsProp != null && boundsProp.y) ? /*#__PURE__*/React.createElement(YAxis, {\n    axis: axis,\n    values: (boundsProp == null || (_boundsProp$y = boundsProp.y) == null ? void 0 : _boundsProp$y.slice(0).reverse()) || (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis.y,\n    pad: horizontal && offsetPad ? _extends({}, pad, {\n      bottom: offsetPad\n    }) : pad,\n    renderValue: renderValue,\n    serie: axis.y.property && getPropertySeries(axis.y.property),\n    thickness: horizontal ? segmentThickness : undefined,\n    theme: theme\n  }) : null;\n  var stackFill = useMemo(function () {\n    if (size === 'fill' || size && size.width === 'fill' && size.height === 'fill') return true;\n    if (size && size.width === 'fill') return 'horizontal';\n    if (size && size.height === 'fill') return 'vertical';\n    return undefined;\n  }, [size]);\n  var guidingChild = useMemo(function () {\n    var result = 0;\n    if (guide && guide.x) result += 1;\n    if (guide && guide.y) result += 1;\n    return result;\n  }, [guide]);\n  var stackElement = /*#__PURE__*/React.createElement(Stack, {\n    gridArea: \"charts\",\n    guidingChild: guidingChild,\n    fill: stackFill\n  }, guide && guide.x && /*#__PURE__*/React.createElement(XGuide, {\n    guide: guide,\n    pad: pad,\n    thickness: horizontal\n  }), guide && guide.y && /*#__PURE__*/React.createElement(YGuide, {\n    guide: guide,\n    pad: pad,\n    thickness: !horizontal\n  }), charts.map(function (_ref9, i) {\n    var prop = _ref9.property,\n      type = _ref9.type,\n      x = _ref9.x,\n      y = _ref9.y,\n      chartRest = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n    // When we offset, we increase the padding on the end for all charts\n    // by the same amount and we shift each successive chart to the\n    // right by an offset for that chart. The last chart's right side\n    // will end up aligning with where the charts would have been\n    // had we not padded their ends.\n    var chartPad = offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad;\n    var offsetProps = offsetPad ? {\n      style: {\n        transform: \"translate(\" + offsets[i] + \"px, 0px)\"\n      }\n    } : {};\n    if (stackedChartType[type]) {\n      // reverse to ensure area Charts are stacked in the right order\n      return prop.map(function (cProp, j) {\n        var pProp = cProp.property || cProp;\n        var _ref10 = typeof cProp === 'object' ? cProp : {},\n          property = _ref10.property,\n          propRest = _objectWithoutPropertiesLoose(_ref10, _excluded4);\n        return /*#__PURE__*/React.createElement(Chart\n        // eslint-disable-next-line react/no-array-index-key\n        , _extends({\n          key: j\n          // when property name isn't valid, send empty array\n          ,\n\n          values: chartValues[i][j] || [],\n          overflow: true,\n          direction: direction\n        }, seriesStyles[pProp], chartProps[i], chartRest, propRest, offsetProps, {\n          type: stackedChartType[type] || type,\n          size: size,\n          pad: chartPad\n        }));\n      }).reverse();\n    }\n    return /*#__PURE__*/React.createElement(Chart\n    // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      values: chartValues[i],\n      overflow: true,\n      direction: direction\n    }, seriesStyles[prop], chartProps[i], chartRest, offsetProps, {\n      type: type,\n      size: size,\n      pad: chartPad\n    }));\n  }), placeholder && (typeof placeholder === 'string' && /*#__PURE__*/React.createElement(Box, {\n    fill: \"vertical\",\n    align: \"center\",\n    justify: \"center\",\n    background: {\n      color: 'background-front',\n      opacity: 'strong'\n    },\n    margin: pad\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text-weak\"\n  }, placeholder)) || placeholder), detail && /*#__PURE__*/React.createElement(Detail, {\n    activeProperty: activeProperty,\n    axis: axis,\n    data: data,\n    horizontal: horizontal,\n    pad: pad,\n    series: series,\n    seriesStyles: seriesStyles,\n    renderValue: renderValue,\n    thickness: segmentThickness\n  }));\n  var legendElement = legend ? /*#__PURE__*/React.createElement(Legend, {\n    series: series,\n    seriesStyles: seriesStyles,\n    activeProperty: activeProperty,\n    setActiveProperty: setActiveProperty\n  }) : null;\n  var content = /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    \"aria-label\": a11yTitle,\n    fill: stackFill,\n    columns: ['auto', stackFill === true || stackFill === 'horizontal' ? 'flex' : 'auto'],\n    rows: [stackFill === true || stackFill === 'vertical' ? 'flex' : 'auto', 'auto'],\n    areas: [{\n      name: 'yAxis',\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: 'xAxis',\n      start: [1, 1],\n      end: [1, 1]\n    }, {\n      name: 'charts',\n      start: [1, 0],\n      end: [1, 0]\n    }],\n    gap: gap\n  }, rest), xAxisElement, yAxisElement, stackElement);\n  if (legendElement) {\n    content = /*#__PURE__*/React.createElement(Box, {\n      align: \"start\"\n    }, content, legendElement);\n  }\n  return content;\n});\nDataChart.displayName = 'DataChart';\nDataChart.propTypes = DataChartPropTypes;\nexport { DataChart };","map":{"version":3,"names":["_excluded","_excluded2","_excluded3","_excluded4","_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","indexOf","React","forwardRef","useMemo","useState","Box","Chart","calcs","calcBounds","Grid","Stack","Text","parseMetricToNum","Detail","Legend","XAxis","YAxis","XGuide","YGuide","createDateFormat","halfPad","heightYGranularity","largestSize","maximum","minimum","points","DataChartPropTypes","useThemeValue","stackedChartType","areas","bars","lines","DataChart","_ref","ref","_boundsProp$x","_boundsProp$y","a11yTitle","_ref$axis","axis","axisProp","_ref$bounds","bounds","boundsProp","chartProp","chart","_ref$data","data","detail","_ref$direction","direction","_ref$gap","gap","guideProp","guide","legend","offset","placeholder","padProp","pad","seriesProp","series","size","rest","theme","_useState","activeProperty","setActiveProperty","horizontal","Array","isArray","filter","s","property","map","getPropertySeries","prop","find","_ref2","charts","slice","c","_ref3","seriesValues","result","forEach","_ref4","d","chartValues","_ref5","opacity","type","totals","cp","aProperty","values","undefined","v","i","base","_","index","concat","p","color","thickness","x","y","y2","value","aValue","push","transform","granularities","medium","steps","granularity0","coarse","Math","min","fine","granularity1","height","date","time","granularity","_result$x$granularity","count","_result$y$granularity","_granularity","chartProps","coarseness","_axis$x$granularity","_axis$y$granularity","_granularity2","chartBounds","_chartValues$index","mergedValues","__","max","alignedBounds","_charts$index","calcValues","seriesStyles","calcThickness","keys","aspect","setPropertyStyle","_ref6","styles","point","colorIndex","pointIndex","key","seriesStyle","pad0","pad1","_ref7","vertical","thicknesses","global","edgeSize","offsetGap","offsets","reduce","a","b","offsetPad","segmentThickness","dateFormats","full","_ref8","render","renderValue","serie","axisValue","_serie","prefix","suffix","datum","dateFormat","Date","xAxisElement","createElement","end","style","floor","yAxisElement","reverse","bottom","stackFill","width","guidingChild","stackElement","gridArea","fill","_ref9","chartRest","chartPad","offsetProps","cProp","j","pProp","_ref10","propRest","overflow","align","justify","background","margin","legendElement","content","columns","rows","name","start","displayName","propTypes"],"sources":["/home/uranus/portfolio/node_modules/grommet/es6/components/DataChart/DataChart.js"],"sourcesContent":["var _excluded = [\"a11yTitle\", \"axis\", \"bounds\", \"chart\", \"data\", \"detail\", \"direction\", \"gap\", \"guide\", \"legend\", \"offset\", \"placeholder\", \"pad\", \"series\", \"size\"],\n  _excluded2 = [\"property\"],\n  _excluded3 = [\"property\", \"type\", \"x\", \"y\"],\n  _excluded4 = [\"property\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport React, { forwardRef, useMemo, useState } from 'react';\nimport { Box } from '../Box';\nimport { Chart, calcs, calcBounds } from '../Chart';\nimport { Grid } from '../Grid';\nimport { Stack } from '../Stack';\nimport { Text } from '../Text';\nimport { parseMetricToNum } from '../../utils';\nimport { Detail } from './Detail';\nimport { Legend } from './Legend';\nimport { XAxis } from './XAxis';\nimport { YAxis } from './YAxis';\nimport { XGuide } from './XGuide';\nimport { YGuide } from './YGuide';\nimport { createDateFormat, halfPad, heightYGranularity, largestSize, maximum, minimum, points } from './utils';\nimport { DataChartPropTypes } from './propTypes';\nimport { useThemeValue } from '../../utils/useThemeValue';\nvar stackedChartType = {\n  areas: 'area',\n  bars: 'bar',\n  lines: 'line'\n};\n\n// DataChart takes a generic data array of objects plus as few properties\n// as possible, and creates a Stack of Charts with x and y axes, a legend,\n// and interactive detail.\n// Much of the code here-in involves the \"few properties\" aspect where we\n// normalize and automatically handle whatever the caller didn't specify.\n\nvar DataChart = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _boundsProp$x, _boundsProp$y;\n  var a11yTitle = _ref.a11yTitle,\n    _ref$axis = _ref.axis,\n    axisProp = _ref$axis === void 0 ? true : _ref$axis,\n    _ref$bounds = _ref.bounds,\n    boundsProp = _ref$bounds === void 0 ? 'align' : _ref$bounds,\n    chartProp = _ref.chart,\n    _ref$data = _ref.data,\n    data = _ref$data === void 0 ? [] : _ref$data,\n    detail = _ref.detail,\n    _ref$direction = _ref.direction,\n    direction = _ref$direction === void 0 ? 'vertical' : _ref$direction,\n    _ref$gap = _ref.gap,\n    gap = _ref$gap === void 0 ? 'small' : _ref$gap,\n    guideProp = _ref.guide,\n    legend = _ref.legend,\n    offset = _ref.offset,\n    placeholder = _ref.placeholder,\n    padProp = _ref.pad,\n    seriesProp = _ref.series,\n    size = _ref.size,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var theme = useThemeValue();\n\n  // legend interaction, if any\n  var _useState = useState(),\n    activeProperty = _useState[0],\n    setActiveProperty = _useState[1];\n  var horizontal = useMemo(function () {\n    return direction === 'horizontal';\n  }, [direction]);\n\n  // normalize seriesProp to an array of objects, one per property\n  var series = useMemo(function () {\n    if (Array.isArray(seriesProp)) return seriesProp.filter(function (s) {\n      return s.property || typeof s === 'string';\n    }).map(function (s) {\n      return typeof s === 'string' ? {\n        property: s\n      } : s;\n    });\n    if (typeof seriesProp === 'string') return [{\n      property: seriesProp\n    }];\n    if (seriesProp) return [seriesProp];\n    return [];\n  }, [seriesProp]);\n  var getPropertySeries = function getPropertySeries(prop) {\n    return series.find(function (_ref2) {\n      var property = _ref2.property;\n      return prop === property;\n    });\n  };\n\n  // Normalize chartProp to an array of objects.\n  // Each chart has one or more properties associated with it.\n  // A stacked bar or area chart has an array of properties.\n  // A point chart can have x, y, thickness, and color each driven\n  // by a separate property.\n  var charts = useMemo(function () {\n    if (!chartProp) {\n      if (series.length === 1) return series.filter(function (s) {\n        return s.property;\n      }).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n      // if we have more than one property, we'll use the first for\n      // the x-axis and we'll plot the rest\n      return series.slice(1).map(function (s) {\n        return {\n          property: s.property\n        };\n      });\n    }\n    if (Array.isArray(chartProp)) return chartProp.map(function (c) {\n      return typeof c === 'string' ? {\n        property: c\n      } : c;\n    }).filter(function (_ref3) {\n      var property = _ref3.property;\n      return property;\n    });\n    if (typeof chartProp === 'string') return [{\n      property: chartProp\n    }];\n    if (chartProp) return [chartProp];\n    return [];\n  }, [chartProp, series]);\n\n  // map the series property values into their own arrays\n  var seriesValues = useMemo(function () {\n    var result = {};\n    series.forEach(function (_ref4) {\n      var property = _ref4.property;\n      result[property] = data.map(function (d) {\n        return d[property];\n      });\n    });\n    return result;\n  }, [data, series]);\n\n  // Setup the values property for each chart.\n  // The index into 'charts' can be used to index into 'chartValues'.\n  var chartValues = useMemo(function () {\n    return charts.map(function (_ref5) {\n      var opacity = _ref5.opacity,\n        property = _ref5.property,\n        type = _ref5.type;\n      if (property) {\n        if (Array.isArray(property)) {\n          // A range chart or a stacked bar or area chart has multiple\n          // properties.\n          // In this case, this returns an array of values,\n          // one per property.\n          if (stackedChartType[type]) {\n            // Further down, where we render, each property is rendered\n            // using a separate Chart component and the values are stacked\n            // such that they line up appropriately.\n            var totals = [];\n            return property.map(function (cp) {\n              // handle object or string\n              var aProperty = cp.property || cp;\n              var values = seriesValues[aProperty];\n              if (!values) return undefined; // property name isn't valid\n              return values.map(function (v, i) {\n                var base = totals[i] || 0;\n                totals[i] = base + v;\n                if (type === 'lines') return [i, base + v];\n                return [i, base, base + v];\n              });\n            });\n          }\n          return data.map(function (_, index) {\n            return [index].concat(property.map(function (p) {\n              return seriesValues[p] ? seriesValues[p][index] : data[index][p];\n            }));\n          });\n        }\n        if (typeof property === 'object') {\n          // When 'property' is an array, the keys of this array indicate\n          // which property drives which part of the rendered Chart.\n          var color = property.color,\n            thickness = property.thickness,\n            x = property.x,\n            y = property.y,\n            y2 = property.y2;\n          return seriesValues[x].map(function (value, index) {\n            var aValue = {\n              value: [value]\n            };\n            aValue.value.push(seriesValues[y][index]);\n            if (y2) aValue.value.push(seriesValues[y2][index]);\n            if (thickness) {\n              var t = seriesValues[thickness.property || thickness][index];\n              aValue.thickness = thickness.transform ? thickness.transform(t) : t;\n            }\n            if (color) {\n              var c = seriesValues[color.property || color][index];\n              aValue.color = color.transform ? color.transform(c) : c;\n            }\n            if (opacity) aValue.opacity = opacity;\n            return aValue;\n          });\n        }\n        return seriesValues[property];\n      }\n      return undefined;\n    });\n  }, [charts, data, seriesValues]);\n\n  // map granularities to work well with the number of data points we have\n  var granularities = useMemo(function () {\n    var medium;\n    // determine a good medium granularity that will align well with the\n    // length of the data\n    var steps = data.length - 1;\n    // special case property driven point charts\n    if (charts[0] && typeof charts[0].property === 'object') medium = 3;else if (steps < 4) medium = data.length;else if (steps === 4) medium = 3;else if (steps % 4 === 0) medium = 5;else if (steps % 3 === 0) medium = 4;else if (steps % 2 === 0) medium = 3;else medium = 2;\n    var granularity0 = {\n      coarse: Math.min(data.length, 2),\n      fine: data.length,\n      medium: medium\n    };\n    var granularity1 = _extends({}, heightYGranularity[size && size.height || 'small'] || {\n      fine: 5,\n      medium: 3\n    }, {\n      coarse: 2\n    });\n    return horizontal ? {\n      x: granularity1,\n      y: granularity0\n    } : {\n      x: granularity0,\n      y: granularity1\n    };\n  }, [charts, data.length, horizontal, size]);\n\n  // normalize axis to objects, convert granularity to a number\n  var axis = useMemo(function () {\n    if (!axisProp) return undefined;\n    var result = {};\n    if (axisProp === true || axisProp.x === true) result.x = {};\n    if (axisProp === true || axisProp.y === true) result.y = {};\n    if (!result.x && axisProp.x) result.x = typeof axisProp.x === 'string' ? {\n      property: axisProp.x\n    } : _extends({}, axisProp.x);\n    if (!result.y && axisProp.y) result.y = typeof axisProp.y === 'string' ? {\n      property: axisProp.y\n    } : _extends({}, axisProp.y);\n    if (result.x) {\n      if (!result.x.property) {\n        // see if we have a point chart that has an x property\n        if (horizontal) {\n          if (charts[0]) result.x.property = charts[0].property.x || charts[0].property;\n        } else if (data && data[0]) {\n          if (data[0].date) result.x.property = 'date';else if (data[0].time) result.x.property = 'time';\n        }\n      }\n      if (!result.x.granularity) result.x.granularity = 'coarse';\n    }\n    if (result.y) {\n      if (!result.y.property) {\n        // see if we have a point chart that has an y property\n        if (horizontal) {\n          if (data && data[0]) {\n            if (data[0].date) result.y.property = 'date';else if (data[0].time) result.y.property = 'time';\n          }\n        } else if (charts[0]) result.y.property = charts[0].property.y || charts[0].property;\n      }\n      if (!result.y.granularity) result.y.granularity = 'coarse';\n    }\n\n    // calculate number of entries based on granularity\n    if (result.x) {\n      var _result$x$granularity = result.x.granularity,\n        granularity = _result$x$granularity === void 0 ? 'coarse' : _result$x$granularity;\n      result.x.count = granularities.x[granularity];\n    }\n    if (result.y) {\n      var _result$y$granularity = result.y.granularity,\n        _granularity = _result$y$granularity === void 0 ? 'coarse' : _result$y$granularity;\n      result.y.count = granularities.y[_granularity];\n    }\n    return result;\n  }, [axisProp, data, charts, granularities, horizontal]);\n\n  // calculate axis, bounds, and thickness for each chart\n  var chartProps = useMemo(function () {\n    var steps = {};\n    var coarseness = horizontal ? [5, undefined] : [undefined, 5];\n    if (axis && axis.x) {\n      var _axis$x$granularity = axis.x.granularity,\n        granularity = _axis$x$granularity === void 0 ? 'coarse' : _axis$x$granularity;\n      steps.x = granularities.x[granularity] - 1;\n    } else steps.x = horizontal ? 1 : data.length - 1;\n    if (axis && axis.y) {\n      var _axis$y$granularity = axis.y.granularity,\n        _granularity2 = _axis$y$granularity === void 0 ? 'coarse' : _axis$y$granularity;\n      steps.y = granularities.y[_granularity2] - 1;\n    } else steps.y = horizontal ? data.length - 1 : 1;\n    var chartBounds = chartValues.map(function (_, index) {\n      var type = charts[index].type;\n      if (stackedChartType[type]) {\n        var _chartValues$index;\n        // merge values for bars, areas, and lines cases\n        var mergedValues = ((_chartValues$index = chartValues[index]) == null || (_chartValues$index = _chartValues$index[0]) == null ? void 0 : _chartValues$index.slice(0)) || [];\n        chartValues[index].slice(1) // skip first index as that is the x value\n        .filter(function (values) {\n          return values;\n        }) // property name isn't valid\n        .forEach(function (values) {\n          mergedValues = mergedValues.map(function (__, i) {\n            return type === 'lines' ? [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][1], values[i][1])] : [i, Math.min(mergedValues[i][1], values[i][1]), Math.max(mergedValues[i][2], values[i][2])];\n          });\n        });\n        return calcBounds(mergedValues, {\n          coarseness: coarseness,\n          direction: direction,\n          steps: steps\n        });\n      }\n      // if this is a data driven x chart, set coarseness for x\n      return calcBounds(chartValues[index], {\n        coarseness: charts[index].property.x ? {\n          x: 5,\n          y: 5\n        } : coarseness,\n        direction: direction,\n        steps: steps\n      });\n    });\n    if (boundsProp === 'align' && chartBounds.length) {\n      var alignedBounds = {\n        x: {},\n        y: {}\n      };\n      chartBounds.forEach(function (bounds) {\n        alignedBounds.x.min = minimum(alignedBounds.x.min, bounds.x.min);\n        alignedBounds.x.max = maximum(alignedBounds.x.max, bounds.x.max);\n        alignedBounds.y.min = minimum(alignedBounds.y.min, bounds.y.min);\n        alignedBounds.y.max = maximum(alignedBounds.y.max, bounds.y.max);\n      });\n      chartBounds = chartBounds.map(function () {\n        return alignedBounds;\n      });\n    }\n    return chartValues.map(function (values, index) {\n      var _charts$index = charts[index],\n        thickness = _charts$index.thickness,\n        type = _charts$index.type;\n      var calcValues = stackedChartType[type] ? values[0] : values;\n      return calcs(calcValues, {\n        bounds: chartBounds[index],\n        direction: direction,\n        steps: steps,\n        thickness: thickness\n      });\n    });\n  }, [axis, boundsProp, charts, chartValues, data, direction, granularities, horizontal]);\n\n  // normalize how we style data properties for use by Legend and Detail\n  var seriesStyles = useMemo(function () {\n    var result = {};\n    // start from what we were explicitly given\n    charts.forEach(function (chart, index) {\n      var calcThickness = chartProps[index].thickness;\n      if (typeof chart.property === 'object' && !Array.isArray(chart.property)) {\n        // data driven point chart\n        Object.keys(chart.property).forEach(function (aspect) {\n          var prop = chart.property[aspect];\n          if (!result[prop.property || prop]) result[prop.property || prop] = {\n            aspect: aspect\n          };\n        });\n      } else {\n        var setPropertyStyle = function setPropertyStyle(_ref6) {\n          var property = _ref6.property,\n            styles = _objectWithoutPropertiesLoose(_ref6, _excluded2);\n          // keep what we've got, use what is new\n          result[property] = _extends({}, styles, result[property] || {});\n          // unless the new style is has no opacity\n          if (!styles.opacity) delete result[property].opacity;\n          if (styles.type === 'point') result[property].point = false;\n          if (calcThickness && !result[property].thickness) result[property].thickness = calcThickness;\n        };\n        if (Array.isArray(chart.property)) chart.property.forEach(function (prop) {\n          if (typeof prop === 'string') setPropertyStyle(_extends({}, chart, {\n            property: prop\n          }));else if (typeof prop === 'object') setPropertyStyle(_extends({}, chart, prop));\n        });else if (typeof chart === 'object') setPropertyStyle(chart);else if (typeof chart === 'string') setPropertyStyle({\n          property: chart\n        });\n      }\n    });\n\n    // set color for any non-aspect properties we don't have one for yet\n    var colorIndex = 0;\n    var pointIndex = 0;\n    Object.keys(result).forEach(function (key) {\n      var seriesStyle = result[key];\n      if (!seriesStyle.aspect && !seriesStyle.color) {\n        seriesStyle.color = \"graph-\" + colorIndex;\n        colorIndex += 1;\n      }\n      // set opacity if it isn't set and this isn't the active property\n      if (activeProperty !== undefined && activeProperty !== key) {\n        seriesStyle.opacity = 'medium';\n      }\n      if (seriesStyle.point === false) {\n        seriesStyle.point = points[pointIndex];\n        pointIndex += 1;\n      }\n    });\n    return result;\n  }, [activeProperty, charts, chartProps]);\n\n  // normalize guide\n  var guide = useMemo(function () {\n    if (!guideProp) return undefined;\n    var result;\n    if (guideProp === true) {\n      result = {\n        x: {},\n        y: {}\n      };\n    } else {\n      result = {};\n      if (guideProp.x) result.x = _extends({}, guideProp.x);\n      if (guideProp.y) result.y = _extends({}, guideProp.y);\n    }\n    // set counts\n    if (result.x) {\n      // if no granularity and axis, align count with axis\n      if (!result.x.granularity && axis && axis.x) result.x.count = axis.x.count;\n      if (!result.x.count) result.x.count = granularities.x[result.x.granularity || 'coarse'];\n    }\n    if (result.y) {\n      // if no granularity and axis, align count with axis\n      if (!result.y.granularity && axis && axis.y) result.y.count = axis.y.count;\n      if (!result.y.count) result.y.count = granularities.y[result.y.granularity || 'coarse'];\n    }\n    return result;\n  }, [axis, granularities, guideProp]);\n\n  // set the pad to half the thickness, based on the chart types\n  // except when using offset, then add even more horizontal pad\n  var pad = useMemo(function () {\n    if (padProp !== undefined) return padProp;\n    var pad0;\n    var pad1;\n    charts.forEach(function (_ref7, index) {\n      var type = _ref7.type;\n      var thickness = chartProps[index].thickness;\n      pad0 = largestSize(pad0, halfPad[thickness]);\n      if (type && type !== 'bar') pad1 = largestSize(pad1, halfPad[thickness]);\n    });\n    return horizontal ? {\n      horizontal: pad1,\n      vertical: pad0\n    } : {\n      horizontal: pad0,\n      vertical: pad1\n    };\n  }, [chartProps, charts, horizontal, padProp]);\n\n  // calculate the thickness in pixels of each chart\n  var thicknesses = useMemo(function () {\n    return offset ? charts.map(function (_, index) {\n      var thickness = chartProps[index].thickness;\n      return parseMetricToNum(theme.global.edgeSize[thickness] || thickness);\n    }) : undefined;\n  }, [charts, chartProps, offset, theme]);\n\n  // normalize any offset gap\n  var offsetGap = useMemo(function () {\n    return (offset == null ? void 0 : offset.gap) && parseMetricToNum(theme.global.edgeSize[offset.gap] || offset.gap) || 0;\n  }, [offset, theme]);\n\n  // calculate the offset for each chart, which is a sum of the thicknesses\n  // any offset gaps that preceded it\n  var offsets = useMemo(function () {\n    if (offset) {\n      return thicknesses.map(function (t, i) {\n        return thicknesses.slice(0, i).reduce(function (a, b) {\n          return a + b + offsetGap;\n        }, 0);\n      });\n    }\n    return undefined;\n  }, [offset, offsetGap, thicknesses]);\n\n  // Calculate the total pad we should add to the end of each chart.\n  // We do this to shrink the width of each chart so we can shift them\n  // via `translate` and have them take up the right amount of width.\n  var offsetPad = useMemo(function () {\n    return offsets ? offsets[offsets.length - 1] + thicknesses[thicknesses.length - 1] + \"px\" : undefined;\n  }, [offsets, thicknesses]);\n\n  // The thickness of the segments. We need to convert to numbers\n  // to be able to compare across charts where some might be using T-shirt\n  // labels and others might be pixel values.\n  var segmentThickness = useMemo(function () {\n    var result = 0;\n    charts.forEach(function (_, index) {\n      var thickness = chartProps[index].thickness;\n      result = Math.max(result, parseMetricToNum(theme.global.edgeSize[thickness] || thickness));\n    });\n    return result + \"px\";\n  }, [charts, chartProps, theme]);\n  var dateFormats = useMemo(function () {\n    var result = {};\n    var full = axis && axis.x && axis.x.granularity === 'coarse';\n    series.forEach(function (_ref8) {\n      var property = _ref8.property,\n        render = _ref8.render;\n      if (!render && data.length > 1 && typeof data[0][property] === 'string') {\n        result[property] = createDateFormat(data[0][property], data[data.length - 1][property], full);\n      }\n    });\n    return result;\n  }, [axis, data, series]);\n  var renderValue = function renderValue(serie, axisValue, y) {\n    if (serie === void 0) {\n      serie = {};\n    }\n    var _serie = serie,\n      prefix = _serie.prefix,\n      property = _serie.property,\n      render = _serie.render,\n      suffix = _serie.suffix;\n    var value = axisValue;\n    if (value !== undefined) {\n      if (!property || !horizontal && y || horizontal && !y) {\n        if (render) return render(value);\n      } else {\n        var datum = data[axisValue];\n        value = datum[property];\n        if (render) return render(value, datum, property);\n      }\n      if (property) {\n        var dateFormat = dateFormats[property];\n        if (dateFormat) return dateFormat(new Date(value));\n        if (prefix) value = \"\" + prefix + value;\n        if (suffix) value = \"\" + value + suffix;\n      }\n    }\n    return value;\n  };\n\n  // TODO: revisit how x/y axis are hooked up to charts and series\n\n  var xAxisElement = axis && axis.x && (chartProps.length || boundsProp != null && boundsProp.x) ? /*#__PURE__*/React.createElement(XAxis, {\n    axis: axis,\n    values: (boundsProp == null || (_boundsProp$x = boundsProp.x) == null ? void 0 : _boundsProp$x.slice(0)) || (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis.x,\n    pad: !horizontal && offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad,\n    renderValue: renderValue,\n    serie: axis.x.property && getPropertySeries(axis.x.property),\n    style: offsetPad ? {\n      transform: \"translate(\" + offsets[Math.floor(offsets.length / 2)] + \"px, 0px)\"\n    } : {},\n    thickness: horizontal ? undefined : segmentThickness,\n    theme: theme\n  }) : null;\n  var yAxisElement = axis && axis.y && (chartProps.length || boundsProp != null && boundsProp.y) ? /*#__PURE__*/React.createElement(YAxis, {\n    axis: axis,\n    values: (boundsProp == null || (_boundsProp$y = boundsProp.y) == null ? void 0 : _boundsProp$y.slice(0).reverse()) || (Array.isArray(chartProps[0]) ? chartProps[0][0] : chartProps[0]).axis.y,\n    pad: horizontal && offsetPad ? _extends({}, pad, {\n      bottom: offsetPad\n    }) : pad,\n    renderValue: renderValue,\n    serie: axis.y.property && getPropertySeries(axis.y.property),\n    thickness: horizontal ? segmentThickness : undefined,\n    theme: theme\n  }) : null;\n  var stackFill = useMemo(function () {\n    if (size === 'fill' || size && size.width === 'fill' && size.height === 'fill') return true;\n    if (size && size.width === 'fill') return 'horizontal';\n    if (size && size.height === 'fill') return 'vertical';\n    return undefined;\n  }, [size]);\n  var guidingChild = useMemo(function () {\n    var result = 0;\n    if (guide && guide.x) result += 1;\n    if (guide && guide.y) result += 1;\n    return result;\n  }, [guide]);\n  var stackElement = /*#__PURE__*/React.createElement(Stack, {\n    gridArea: \"charts\",\n    guidingChild: guidingChild,\n    fill: stackFill\n  }, guide && guide.x && /*#__PURE__*/React.createElement(XGuide, {\n    guide: guide,\n    pad: pad,\n    thickness: horizontal\n  }), guide && guide.y && /*#__PURE__*/React.createElement(YGuide, {\n    guide: guide,\n    pad: pad,\n    thickness: !horizontal\n  }), charts.map(function (_ref9, i) {\n    var prop = _ref9.property,\n      type = _ref9.type,\n      x = _ref9.x,\n      y = _ref9.y,\n      chartRest = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n    // When we offset, we increase the padding on the end for all charts\n    // by the same amount and we shift each successive chart to the\n    // right by an offset for that chart. The last chart's right side\n    // will end up aligning with where the charts would have been\n    // had we not padded their ends.\n    var chartPad = offsetPad ? _extends({}, pad, {\n      end: offsetPad\n    }) : pad;\n    var offsetProps = offsetPad ? {\n      style: {\n        transform: \"translate(\" + offsets[i] + \"px, 0px)\"\n      }\n    } : {};\n    if (stackedChartType[type]) {\n      // reverse to ensure area Charts are stacked in the right order\n      return prop.map(function (cProp, j) {\n        var pProp = cProp.property || cProp;\n        var _ref10 = typeof cProp === 'object' ? cProp : {},\n          property = _ref10.property,\n          propRest = _objectWithoutPropertiesLoose(_ref10, _excluded4);\n        return /*#__PURE__*/React.createElement(Chart\n        // eslint-disable-next-line react/no-array-index-key\n        , _extends({\n          key: j\n          // when property name isn't valid, send empty array\n          ,\n          values: chartValues[i][j] || [],\n          overflow: true,\n          direction: direction\n        }, seriesStyles[pProp], chartProps[i], chartRest, propRest, offsetProps, {\n          type: stackedChartType[type] || type,\n          size: size,\n          pad: chartPad\n        }));\n      }).reverse();\n    }\n    return /*#__PURE__*/React.createElement(Chart\n    // eslint-disable-next-line react/no-array-index-key\n    , _extends({\n      key: i,\n      values: chartValues[i],\n      overflow: true,\n      direction: direction\n    }, seriesStyles[prop], chartProps[i], chartRest, offsetProps, {\n      type: type,\n      size: size,\n      pad: chartPad\n    }));\n  }), placeholder && (typeof placeholder === 'string' && /*#__PURE__*/React.createElement(Box, {\n    fill: \"vertical\",\n    align: \"center\",\n    justify: \"center\",\n    background: {\n      color: 'background-front',\n      opacity: 'strong'\n    },\n    margin: pad\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"text-weak\"\n  }, placeholder)) || placeholder), detail && /*#__PURE__*/React.createElement(Detail, {\n    activeProperty: activeProperty,\n    axis: axis,\n    data: data,\n    horizontal: horizontal,\n    pad: pad,\n    series: series,\n    seriesStyles: seriesStyles,\n    renderValue: renderValue,\n    thickness: segmentThickness\n  }));\n  var legendElement = legend ? /*#__PURE__*/React.createElement(Legend, {\n    series: series,\n    seriesStyles: seriesStyles,\n    activeProperty: activeProperty,\n    setActiveProperty: setActiveProperty\n  }) : null;\n  var content = /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    \"aria-label\": a11yTitle,\n    fill: stackFill,\n    columns: ['auto', stackFill === true || stackFill === 'horizontal' ? 'flex' : 'auto'],\n    rows: [stackFill === true || stackFill === 'vertical' ? 'flex' : 'auto', 'auto'],\n    areas: [{\n      name: 'yAxis',\n      start: [0, 0],\n      end: [0, 0]\n    }, {\n      name: 'xAxis',\n      start: [1, 1],\n      end: [1, 1]\n    }, {\n      name: 'charts',\n      start: [1, 0],\n      end: [1, 0]\n    }],\n    gap: gap\n  }, rest), xAxisElement, yAxisElement, stackElement);\n  if (legendElement) {\n    content = /*#__PURE__*/React.createElement(Box, {\n      align: \"start\"\n    }, content, legendElement);\n  }\n  return content;\n});\nDataChart.displayName = 'DataChart';\nDataChart.propTypes = DataChartPropTypes;\nexport { DataChart };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}